@use 'sass:map';
@use 'sass:list';
@use 'sass:color';
@use 'sass:string';

$color-var-prefix: '--raw-color';

@function listToMap($list, $prefix: '') {
  $map: ();
  @for $i from 1 through length($list) {
    $map: map.merge($map, ($prefix + ($i - 1): nth($list, $i)));
  }
  @return $map;
}

@function listToReverseMap($list, $prefix: '') {
  $map: ();
  $length: length($list);
  @for $i from 1 through $length {
    $index: $length - $i;
    $map: map.merge($map, ($prefix + $index: nth($list, $i)));
  }
  @return $map;
}

@function parseColorToRGB($clr) {
  $red: color.red($clr);
  $green: color.green($clr);
  $blue: color.blue($clr);
  @return #{$red, $green, $blue};
}

@function clr($var, $opacity: 1) {
  @if ($opacity >= 1) {
    @return string.unquote('rgb(var(#{$color-var-prefix}-#{$var}))');
  }

  @return string.unquote(
    'rgba(var(#{$color-var-prefix}-#{$var}), #{$opacity})'
  );
}

@mixin extractColors($map) {
  @each $key, $value in $map {
    #{$color-var-prefix}-#{$key}: #{parseColorToRGB($value)};
  }
}
